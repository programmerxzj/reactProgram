[{"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\index.js":"1","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\App.js":"2","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\admin\\admin.jsx":"3","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\login\\login.jsx":"4","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\index.js":"5","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\ajax.js":"6","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\memoryUtil.js":"7","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\storageUtils.js":"8","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx":"9","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\header\\header.jsx":"10","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\home\\home.jsx":"11","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\product.jsx":"12","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\category.jsx":"13","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user.jsx":"14","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\bar.jsx":"15","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\line.jsx":"16","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\role.jsx":"17","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\pie.jsx":"18","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\config\\menuConfig.js":"19","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\dataUtils.js":"20","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\link-button\\link-button.jsx":"21","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\add-form.jsx":"22","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\update-form.jsx":"23","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\home.jsx":"24","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\add-update.jsx":"25","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\detail.jsx":"26","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\constants.js":"27","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx":"28","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx":"29","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\add-form.jsx":"30","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\auth-form.jsx":"31","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user-form.jsx":"32","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\store.js":"33","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\reducer.js":"34","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\action-types.js":"35","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\actions.js":"36","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\not-found\\not-found.jsx":"37"},{"size":310,"mtime":1614585873585,"results":"38","hashOfConfig":"39"},{"size":523,"mtime":1614739330967,"results":"40","hashOfConfig":"39"},{"size":1999,"mtime":1614738770912,"results":"41","hashOfConfig":"39"},{"size":4194,"mtime":1614590642410,"results":"42","hashOfConfig":"39"},{"size":3245,"mtime":1612426884170,"results":"43","hashOfConfig":"39"},{"size":787,"mtime":1611309883466,"results":"44","hashOfConfig":"39"},{"size":158,"mtime":1614739445500,"results":"45","hashOfConfig":"39"},{"size":386,"mtime":1611379871063,"results":"46","hashOfConfig":"39"},{"size":3505,"mtime":1614586025683,"results":"47","hashOfConfig":"39"},{"size":2796,"mtime":1614587205992,"results":"48","hashOfConfig":"39"},{"size":235,"mtime":1611544863272,"results":"49","hashOfConfig":"39"},{"size":633,"mtime":1611740870510,"results":"50","hashOfConfig":"39"},{"size":6986,"mtime":1611662738940,"results":"51","hashOfConfig":"39"},{"size":4337,"mtime":1612427761938,"results":"52","hashOfConfig":"39"},{"size":1433,"mtime":1614670635910,"results":"53","hashOfConfig":"39"},{"size":1436,"mtime":1614673454728,"results":"54","hashOfConfig":"39"},{"size":5376,"mtime":1614586594828,"results":"55","hashOfConfig":"39"},{"size":3426,"mtime":1614673567656,"results":"56","hashOfConfig":"39"},{"size":1071,"mtime":1611404107986,"results":"57","hashOfConfig":"39"},{"size":344,"mtime":1611480367461,"results":"58","hashOfConfig":"39"},{"size":182,"mtime":1611497594799,"results":"59","hashOfConfig":"39"},{"size":1459,"mtime":1611662827312,"results":"60","hashOfConfig":"39"},{"size":972,"mtime":1611662307394,"results":"61","hashOfConfig":"39"},{"size":5385,"mtime":1614739642856,"results":"62","hashOfConfig":"39"},{"size":8454,"mtime":1614739874126,"results":"63","hashOfConfig":"39"},{"size":3555,"mtime":1614739881660,"results":"64","hashOfConfig":"39"},{"size":125,"mtime":1611801515830,"results":"65","hashOfConfig":"39"},{"size":3651,"mtime":1611993138998,"results":"66","hashOfConfig":"39"},{"size":2575,"mtime":1612075921052,"results":"67","hashOfConfig":"39"},{"size":1055,"mtime":1612149506248,"results":"68","hashOfConfig":"39"},{"size":2101,"mtime":1612249218086,"results":"69","hashOfConfig":"39"},{"size":2460,"mtime":1612427170507,"results":"70","hashOfConfig":"39"},{"size":324,"mtime":1614568078153,"results":"71","hashOfConfig":"39"},{"size":969,"mtime":1614586882110,"results":"72","hashOfConfig":"39"},{"size":241,"mtime":1614585386223,"results":"73","hashOfConfig":"39"},{"size":1423,"mtime":1614585564058,"results":"74","hashOfConfig":"39"},{"size":862,"mtime":1614738619445,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"gje5x7",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\index.js",[],["160","161"],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\App.js",["162"],"import React, {Component} from 'react'\r\n// import {Button,message} from 'antd'\r\nimport {BrowserRouter,HashRouter,Route,Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login} ></Route>\r\n          <Route path='/' component={Admin} ></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\admin\\admin.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\login\\login.jsx",["163","164"],"import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Icon,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './login.less'\r\nimport {login} from \"../../redux/actions\";\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n* 登陆界面\r\n* */\r\nclass Login extends Component {\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // console.log('发送ajax请求',values);\r\n        //请求登陆\r\n        const {username, password} = values\r\n\r\n        this.props.login(username,password)\r\n\r\n      } else {\r\n        console.log('校验失败');\r\n      }\r\n    })\r\n    // // 得到form对象\r\n    // const form = this.props.form\r\n    // // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n  //自定义校验\r\n  /*\r\n  用户名/密码的的合法性要求\r\n  1). 必须输入\r\n  2). 必须大于等于 4 位\r\n  3). 必须小于等于 12 位\r\n  4). 必须是英文、数字或下划线组成\r\n*/\r\n  validatePwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback('请输入密码...')\r\n    } else if (value.length < 4) {\r\n      callback('密码长度不能小于4...')\r\n    } else if (value.length > 12) {\r\n      callback('密码长度不能大于12...')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是数字、字母、下划线...')\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //验证是否已经登录\r\n    const user = this.props.user\r\n    if (user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    const errorMsg=this.props.user.errorMsg\r\n\r\n    const form = this.props.form\r\n    const {getFieldDecorator} = form\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React 项目: 杂货管理系统</h1>\r\n        </header>\r\n        <section className='login-content'>\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h3>用户登陆</h3>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    {required: true, whitespace: true, message: '用户名必须输入'},\r\n                    {min: 4, message: '用户名至少4位'},\r\n                    {max: 12, message: '用户名最多12位'},\r\n                    {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成'},\r\n                  ],\r\n                  initialValue:'admin'\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ],\r\n                  initialValue: 'admin'\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\index.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\api\\ajax.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\memoryUtil.js",["165"],"/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {} , //保存当前的user\r\n  product:{}  //保存指定商品对象\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\storageUtils.js",["166"],"/*\r\n* 进行local数据存储保存\r\n* */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\n\r\nexport default {\r\n  /**\r\n   * 保存user\r\n   */\r\n  saveUser(user) {\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /**\r\n   * 读取user\r\n   */\r\n  getUser() {\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n  /**\r\n   * 删除user\r\n   */\r\n  removeUser() {\r\n    store.remove(USER_KEY)\r\n  }\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\left-nav\\left-nav.jsx",["167","168"],"import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './left-nav.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtil from '../../utils/memoryUtil'\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n  getMenuNodes = (menuList) => {\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.map(item => {\r\n      // 如果当前用户有item对应的权限, 才需要显示对应菜单项\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            //更新headTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}></Icon>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                <Icon type={item.icon}></Icon>\r\n                <span>{item.title}</span>\r\n              </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 查询item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n\r\n    // 1. 如果当前用户是admin\r\n    // 2. 如果当前item是公开的\r\n    // 3. 当前用户有此item的权限: key有没有menus中\r\n\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) { // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    let path = this.props.location.pathname\r\n\r\n    if (path.indexOf('/product') === 0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to='/' className='left-nav-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>杂货管理</h1>\r\n        </Link>\r\n        <Menu\r\n          mode='inline'\r\n          theme='dark'\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n* withRouter\r\n* 包装非路由组件获取三个值   history location match\r\n* */\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\header\\header.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\home\\home.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\product.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\category.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\bar.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\line.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\role.jsx",["169"],"import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from \"./add-form\";\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dataUtils'\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport {logout} from \"../../redux/actions\";\r\n\r\nclass Role extends Component {\r\n  state = {\r\n    roles: [],  //所有角色列表\r\n    role: {},  //选中的role\r\n    isShowAdd: false,//是否显示添加界面\r\n    isShowAuth: false,//是否显示更新界面\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  /**\r\n   * 初始化列\r\n   */\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: (auth_time) => formateDate(auth_time)\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n    // console.log(this.state.roles[0].name, this.state.roles[0].create_time);\r\n    // console.log(this.state.roles[0].auth_name, this.state.roles[0].auth_time);\r\n  }\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => {\r\n        // alert('点击行')\r\n        // console.log(role);\r\n        this.setState({\r\n          role\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取前台列表roles\r\n   */\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加角色\r\n   */\r\n  addRole = () => {\r\n    //表单验证\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        //隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        //  收集数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n        //  添加角色\r\n        const result = await reqAddRole(roleName)\r\n        //  更新列表\r\n        if (result.status === 0) {\r\n          message.success('角色添加成功')\r\n          const role = result.data\r\n\r\n          //  更新role状态：基于原本数据\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.error('角色添加失败')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 更新角色\r\n   */\r\n  updateRole = async () => {\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n    const role = this.state.role\r\n    //  得到menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    //  请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status === 0) {\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('强制退出重新登录')\r\n      } else {\r\n        message.success('角色权限更新成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n    } else {\r\n      message.error('添加角色失败')\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type='primary'\r\n          style={{marginRight: '10px'}}\r\n          onClick={() => this.setState({isShowAdd: true})}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        <Button\r\n          type='primary'\r\n          disabled={!role._id}\r\n          onClick={() => this.setState({isShowAuth: true})}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              this.setState({role})\r\n            }\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n          }}\r\n        >\r\n\r\n          <AddForm\r\n            setForm={(form) => {\r\n              this.form = form\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\charts\\pie.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\config\\menuConfig.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\dataUtils.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\components\\link-button\\link-button.jsx",["170"],"import React, {Component} from 'react'\r\nimport './link-button.less'\r\n\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className='link-button'></button>\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\category\\update-form.jsx",["171"],"import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\nclass UpdateForm extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categoryName} = this.props\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true,message:'名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\home.jsx",["172"],"import React, {Component} from 'react'\r\n\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from \"../../api\";\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport memoryUtil from \"../../utils/memoryUtil\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    total: 0,  //默认初始数量\r\n    products: [],\r\n    loading: false, //加载中\r\n    searchType: 'productName',//搜索的类型\r\n    searchName: '',  //搜索的名称\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '￥' + price  //指定显示的值的样式\r\n      },\r\n      {\r\n        title: '状态',\r\n        width: 100,\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status === 1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status === 1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status === 1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 100,\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 显示商品详情页面\r\n   * @param product\r\n   */\r\n  showDetail = (product) => {\r\n    //使用缓存product对象给detail使用\r\n    memoryUtil.product = product\r\n    this.props.history.push('/product/detail')\r\n  }\r\n  /**\r\n   * 显示修改产品界面\r\n   * @param product\r\n   */\r\n  showUpdate= (product) => {\r\n    //使用缓存product对象给detail使用\r\n    memoryUtil.product = product\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /**\r\n   * 获取指定页码的列表数据\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum  //保存页面让其他方法可以使用\r\n\r\n    //发请求  中\r\n    this.setState({\r\n      loading: true\r\n    })\r\n\r\n    const {searchName, searchType} = this.state\r\n\r\n    let result\r\n    //关键字搜索  搜索分页\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else {//一般分页\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n    //请求结束\r\n    this.setState({\r\n      loading: false\r\n    })\r\n    if (result.status === 0) {\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  //更新商品状态\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if (result.status === 0) {\r\n      message.success('商品更新成功...')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n    const dataSource = [\r\n      {\r\n        key: '1',\r\n        name: '胡彦斌',\r\n        age: 32,\r\n        address: '西湖区湖底公园1号',\r\n      },\r\n      {\r\n        key: '2',\r\n        name: '胡彦祖',\r\n        age: 42,\r\n        address: '西湖区湖底公园1号',\r\n      },\r\n    ];\r\n\r\n    const {products, total, loading, searchName, searchType} = this.state\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType: value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={e => this.setState({searchName: e.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'></Icon>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          rowKey='_id'\r\n          bordered\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            total,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\add-update.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\detail.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\utils\\constants.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\add-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\role\\auth-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\user\\user-form.jsx",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\store.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\reducer.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\action-types.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\redux\\actions.js",[],"C:\\Users\\徐梓钧\\Desktop\\react后台管理\\react-admin-client\\src\\pages\\not-found\\not-found.jsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":3,"column":9,"nodeType":"179","messageId":"180","endLine":3,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":8,"column":3,"nodeType":"179","messageId":"180","endLine":8,"endColumn":10},{"ruleId":"177","severity":1,"message":"182","line":72,"column":11,"nodeType":"179","messageId":"180","endLine":72,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":4,"column":1,"nodeType":"185","endLine":7,"endColumn":2},{"ruleId":"183","severity":1,"message":"184","line":8,"column":1,"nodeType":"185","endLine":28,"endColumn":2},{"ruleId":"177","severity":1,"message":"186","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":19,"column":30,"nodeType":"189","messageId":"190","endLine":19,"endColumn":32},{"ruleId":"177","severity":1,"message":"191","line":16,"column":8,"nodeType":"179","messageId":"180","endLine":16,"endColumn":20},{"ruleId":"177","severity":1,"message":"192","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"193","line":10,"column":7,"nodeType":"179","messageId":"180","endLine":10,"endColumn":13},{"ruleId":"177","severity":1,"message":"194","line":151,"column":11,"nodeType":"179","messageId":"180","endLine":151,"endColumn":21},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'errorMsg' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'memoryUtil' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'storageUtils' is defined but never used.","'Component' is defined but never used.","'Option' is assigned a value but never used.","'dataSource' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]